{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","class","labelled","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2a6741c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom' \r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n             </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                 }\r\n\r\nNavbar.defaultProps ={\r\n    title : 'Set Title Here',\r\n    aboutText : 'About'\r\n\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked\"); \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        // console.log(\"Lowercase was clicked\"); \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        // console.log(\"Lowercase was clicked\"); \r\n        let newText = ('');\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleCopyClick = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        // console.log(\"Copy was clicked\"); \r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space Removed\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"jdkllf\";//wrong way to change the state\r\n    // setText(\"jdkllf\");// correct way to change the state\r\n    return (    \r\n        <>\r\n  <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n  <h1 className=\"mb-4\"> {props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white',\r\n    color: props.mode==='dark'?'white':'#042743'}}></textarea>\r\n    </div> \r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert to Upper Case</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick} >Convert to Lower Case</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick} >Clear Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick} >Copy Text</button>\r\n    <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces} >Remove ExtraSpaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your text Summary</h1>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008* text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n    </div>\r\n</>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white',\r\n    //     border: '1px solid white'\r\n    // })\r\n\r\n    let myStyle = {\r\n        color : props.mode === 'dark'?'white':'#042743',\r\n        backgroundColor: props.mode === 'dark'?'rgb(36 74 104)':'white'\r\n    }\r\n\r\n    return (\r\n    <div className=\"container\" style ={{color : props.mode === 'dark'?'white':'#042743'}}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n    <div class=\"accordion my-2\" id=\"accordionExample\" style={myStyle}>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button class=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            <strong> Analyze your text </strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" labelled=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" style={myStyle}>\r\n                Textutils gives you a way to analyze your quickly and efficient. Be it word count, characters count or \r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n            <button class=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            <strong>   Free to use</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" labelled=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" style={myStyle}>\r\n                TextUtils is a free character counter tools that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingThree\">\r\n            <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n             <strong>   Browser Compatible </strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" class=\"accordion-collapse collapse\" labelled=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\"style={myStyle}>\r\n                This word counter software works in any web browsers such as Chrome, Firebox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     \r\n    </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}    \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\n\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');//wheather dark mode is enable or not\n  const [alert, setAlert] =useState(null);\n\n  const showAlert = (message,type )=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode = () =>{\n   if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      // document.title = 'TextUtils - Dark Mode'\n      // setInterval(() =>{\n      //   document.title = 'TextUtils is amazing mode';\n      // },2000);\n      // setInterval(() =>{\n      //   document.title = 'Install TextUtils Now';\n      // },1500);\n    }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor ='white';\n    showAlert(\"Light mode has been enabled\",\"success\");\n    // document.title = 'TextUtils - Light Mode'\n    // setInterval(() =>{\n    //   document.title = 'TextUtils is amazing mode';\n    // },2000);\n    // setInterval(() =>{\n    //   document.title = 'Install TextUtils Now';\n    // },1500);\n  }  \n  }\n  return (\n  <>\n{/* <Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" />  */}\n{/* <Navbar /> */}\n<Router>\n<Navbar title =\"TextUtils\" mode= {mode} toggleMode={toggleMode} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n    \n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route> \n  \n          <Route exact path=\"/\">\n          <TextForm heading = \"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode} showAlert={showAlert}/>\n          </Route>\n    </Switch> \n\n\n</div> \n{/* <About />  */}\n</Router>\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}