{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc1ef86d.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom' \r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n             </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                 }\r\n\r\nNavbar.defaultProps ={\r\n    title : 'Set Title Here',\r\n    aboutText : 'About'\r\n\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked\"); \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        // console.log(\"Lowercase was clicked\"); \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        // console.log(\"Lowercase was clicked\"); \r\n        let newText = ('');\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleCopyClick = () =>{\r\n        // console.log(\"Copy was clicked\"); \r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        // console.log(\"Copy was clicked\"); \r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space Removed\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"jdkllf\";//wrong way to change the state\r\n    // setText(\"jdkllf\");// correct way to change the state\r\n    return (    \r\n        <>\r\n  <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n  <h1> {props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',\r\n    color: props.mode==='dark'?'white':'#042743'}}></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary\" onClick={handleUpClick} >Convert to Upper Case</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to Lower Case</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick} >Copy Text</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove ExtraSpaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your text Summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008* text.split(\" \").length} Minutes Read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');//wheather dark mode is enable or not\n  const [alert, setAlert] =useState(null);\n\n  const showAlert = (message,type )=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode = () =>{\n   if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Dark Mode'\n      // setInterval(() =>{\n      //   document.title = 'TextUtils is amazing mode';\n      // },2000);\n      // setInterval(() =>{\n      //   document.title = 'Install TextUtils Now';\n      // },1500);\n    }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor ='white';\n    showAlert(\"Light mode has been enabled\",\"success\");\n    document.title = 'TextUtils - Light Mode'\n    // setInterval(() =>{\n    //   document.title = 'TextUtils is amazing mode';\n    // },2000);\n    // setInterval(() =>{\n    //   document.title = 'Install TextUtils Now';\n    // },1500);\n  }  \n  }\n  return (\n  <>\n{/* <Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n{/* <Navbar /> */}\n{/* <Router> */}\n<Navbar title =\"TextUtils\" mode= {mode} toggleMode={toggleMode} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n    \n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n  \n          {/* <Route exact path=\"/\"> */}\n          <TextForm heading = \"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n\n\n</div> \n{/* <About /> */}\n{/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}